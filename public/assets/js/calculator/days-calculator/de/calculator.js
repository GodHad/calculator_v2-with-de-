function calculate(){let dateFrom=input.get('start_date').date().raw();let dateTo=input.get('end_date').date().gt('start_date').raw();if(!input.valid())return;const seconds=(dateTo.getTime()-dateFrom.getTime())/1000;let results=[];const minutes=seconds/60;const hours=minutes/60;const days=Math.trunc(hours/24);results.unshift(plural(days,'Tage:Tag:Tage:Tage:Tage:Tage'));const holidays=getUserHolidays();const{weekdays,weekends,holidayCount}=countBusinessAndweekends(dateFrom,dateTo,holidays);results.push(plural(weekdays,'Arbeitstage:Arbeitstag:Arbeitstage:Arbeitstage:Arbeitstage:Arbeitstage'));results.push(plural(weekends,'Wochenendtage:Wochenendtag:Wochenendtage:Wochenendtage:Wochenendtage:Wochenendtage'));if(holidayCount)results.push(plural(holidayCount,'Feiertage:Feiertag:Feiertage:Feiertage:Feiertage:Feiertage'));$('.result-age__text').innerHTML='<div class="result-text">'+results.join('</div><div class="result-text"> ')+'</div>';generateCalendar(dateFrom);generateCalendar(dateTo,'result-age--to');}
function generateCalendar(date,calendar='result-age--from'){const daysInMonth=new Date(date.getFullYear(),date.getMonth()+1,0).getDate();let firstDay=new Date(date.getFullYear(),date.getMonth(),1).getDay();const daysInMonthPrev=new Date(date.getFullYear(),date.getMonth(),0).getDate();const isStartCalendar=calendar==='result-age--from'||calendar==='result-age--from-two';const isEndCalendar=calendar==='result-age--to'||calendar==='result-age--to-two';if(!firstDay)firstDay=7;let activeClass='current';const $days=$$(`.${calendar} .result-age--days p`);let i=0;while(i<=$days.length){if($days[i]){$days[i].innerHTML='';$days[i].classList.remove('current','current-between','active','after-date','before-date');}
let day=i-firstDay+1;const $current_month_day=$days[i-1];if(i>=firstDay&&i<daysInMonth+firstDay){$current_month_day.innerHTML=day;$current_month_day.classList.add('active');if(day===date.getDate())$current_month_day.classList.add(activeClass);if(day<date.getDate()&&isEndCalendar||day>date.getDate()&&isStartCalendar){$current_month_day.classList.add('current-between');}}else if(i<firstDay-1){if($days[i])$days[i].innerHTML=daysInMonthPrev-firstDay+i+2;if(calendar==='result-age--to'){$days[i].classList.add('current-between');}}else if(i>=firstDay){$current_month_day.innerHTML=i-daysInMonth-firstDay+1;if(calendar==='result-age--from'){$current_month_day.classList.add('current-between');}}
i++;}
$(`.${calendar} .date-title--date`).innerHTML=convertDateToDMY(date);}
function convertDateToDMY(date){const months=['Jan','Feb','MÃ¤r','Apr','Mai','Jun','Jul','Aug','Sep','Okt','Nov','Dez'];const day=date.getDate();const monthIndex=date.getMonth();const year=date.getFullYear();return `${day} ${months[monthIndex]} ${year}`;}
function setCommas(number){return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g,',');}
function getUserHolidays(){const count_holidays=input.get('count_holidays').checked().raw();if(!count_holidays)return[];const holidayKeys='abcdefghijklmnopqrstuvwxyz';const holidays=[];holidayKeys.split('').map(key=>{if(_('count_month_'+key)!==null){let month=input.get('count_month_'+key).raw();let day=input.get('count_day_'+key).raw();if(parseInt(month)&&parseInt(day))holidays.push(month+'.'+day)}});const default_holidays={'new_years_day':'1.1','juneteenth_day':'6.19','independence_day':'7.4','veterans_day':'11.11','christmas_day':'12.25',}
for(const[key,value]of Object.entries(default_holidays)){if(input.get(key).checked().raw()){holidays.push(value);}}
return holidays;}
function countBusinessAndweekends(startDate,endDate,holidays){startDate=new Date(startDate);endDate=new Date(endDate);let weekdays=0;let weekends=0;let holidayCount=0;while(startDate<endDate){const dayOfWeek=startDate.getDay();const dateString=(startDate.getMonth()+1)+'.'+startDate.getDate();if(dayOfWeek===0||dayOfWeek===6){weekends++;}else{weekdays++;}
if(holidays.includes(dateString)){weekdays--;holidayCount++;}
startDate.setDate(startDate.getDate()+1);}
if(endDate.getDay()===0||endDate.getDay()===6){weekends--;}else{weekdays--;}
return{weekdays,weekends,holidayCount};}
function convert(){let startDate=input.get('start_date_two').date().raw();let years=input.get('years').optional().positive().val();let months=input.get('months').optional().positive().val();let weeks=input.get('weeks').optional().positive().val();let days=input.get('days').optional().positive().val();let action=input.get('add_subtract').raw();if(!input.valid())return;const isAdd=action==='add';let endDate=new Date(startDate);if(isAdd){if(years)endDate.setFullYear(endDate.getFullYear()+years);if(months)endDate.setMonth(endDate.getMonth()+months);if(weeks)endDate.setDate(endDate.getDate()+weeks*7);if(days)endDate.setDate(endDate.getDate()+days);}else{if(years)endDate.setFullYear(endDate.getFullYear()-years);if(months)endDate.setMonth(endDate.getMonth()-months);if(weeks)endDate.setDate(endDate.getDate()-weeks*7);if(days)endDate.setDate(endDate.getDate()-days);}
generateCalendar(startDate,'result-age--from-two');generateCalendar(endDate,'result-age--to-two');}